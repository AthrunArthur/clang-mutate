Manipulate C-family ASTs with Clang                        -*- org -*-

Run make to compile the clang-mutate executable.  This tool performs
four operations on C-language source files.

- number :: numbers each statement in the input
- delete :: deletes that numbered statement
- insert :: copies the second numbered statement before the first
- swap   :: swaps the two numbered statements

For example:
: $ cat hello.c 
: int main(int argc, char *argv[])
: {
:   puts("hello");
:   return 0;
: }
: 
: $ ./clang-mutate -number hello.c -- clang
: Processing: hello.c.
: /* numbered using clang-mutate */
: int main(int argc, char *argv[])
: /* 0[ */{
:   /* 3[ *//* 2[ *//* 1[ */puts/* ]2 *//* ]3 */(/* 5[ *//* 4[ */"hello"/* ]4 *//* ]5 */)/* ]1 */;
:   /* 6[ */return /* 7[ */0/* ]6 *//* ]7 */;
: }/* ]0 */
: 
: $ ./clang-mutate -delete -stmt1=6 hello.c -- clang
: Processing: hello.c.
: /* deleted 6 using clang-mutate */
: int main(int argc, char *argv[])
: {
:   puts("hello");
:   /* deleted:6 */;
: }

This uses the clang LibTooling [1] interface, which means that the
clang-mutate executable works best when the executable is copied to
the same directory as the clang executable.  Running "make install"
will do this for you.

[1] http://clang.llvm.org/docs/LibTooling.html
